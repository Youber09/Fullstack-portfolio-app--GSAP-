/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VerificationRouteImport } from './routes/verification'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as VerificationVerifyEmailRouteImport } from './routes/verification/verify-email'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as AuthSignupRouteImport } from './routes/auth/Signup'
import { Route as AuthResetPasswordTokenRouteImport } from './routes/auth/reset-password/$token'

const VerificationRoute = VerificationRouteImport.update({
  id: '/verification',
  path: '/verification',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const VerificationVerifyEmailRoute = VerificationVerifyEmailRouteImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => VerificationRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/Signup',
  path: '/Signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthResetPasswordTokenRoute = AuthResetPasswordTokenRouteImport.update({
  id: '/reset-password/$token',
  path: '/reset-password/$token',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/verification': typeof VerificationRouteWithChildren
  '/auth/Signup': typeof AuthSignupRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/verification/verify-email': typeof VerificationVerifyEmailRoute
  '/auth/reset-password/$token': typeof AuthResetPasswordTokenRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/verification': typeof VerificationRouteWithChildren
  '/auth/Signup': typeof AuthSignupRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/verification/verify-email': typeof VerificationVerifyEmailRoute
  '/auth/reset-password/$token': typeof AuthResetPasswordTokenRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/verification': typeof VerificationRouteWithChildren
  '/auth/Signup': typeof AuthSignupRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/verification/verify-email': typeof VerificationVerifyEmailRoute
  '/auth/reset-password/$token': typeof AuthResetPasswordTokenRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/verification'
    | '/auth/Signup'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/verification/verify-email'
    | '/auth/reset-password/$token'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/verification'
    | '/auth/Signup'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/verification/verify-email'
    | '/auth/reset-password/$token'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/verification'
    | '/auth/Signup'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/verification/verify-email'
    | '/auth/reset-password/$token'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  VerificationRoute: typeof VerificationRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/verification': {
      id: '/verification'
      path: '/verification'
      fullPath: '/verification'
      preLoaderRoute: typeof VerificationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/verification/verify-email': {
      id: '/verification/verify-email'
      path: '/verify-email'
      fullPath: '/verification/verify-email'
      preLoaderRoute: typeof VerificationVerifyEmailRouteImport
      parentRoute: typeof VerificationRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/Signup': {
      id: '/auth/Signup'
      path: '/Signup'
      fullPath: '/auth/Signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/reset-password/$token': {
      id: '/auth/reset-password/$token'
      path: '/reset-password/$token'
      fullPath: '/auth/reset-password/$token'
      preLoaderRoute: typeof AuthResetPasswordTokenRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthSignupRoute: typeof AuthSignupRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordTokenRoute: typeof AuthResetPasswordTokenRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignupRoute: AuthSignupRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordTokenRoute: AuthResetPasswordTokenRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface VerificationRouteChildren {
  VerificationVerifyEmailRoute: typeof VerificationVerifyEmailRoute
}

const VerificationRouteChildren: VerificationRouteChildren = {
  VerificationVerifyEmailRoute: VerificationVerifyEmailRoute,
}

const VerificationRouteWithChildren = VerificationRoute._addFileChildren(
  VerificationRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  VerificationRoute: VerificationRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
